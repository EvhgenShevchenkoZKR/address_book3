<?php

/**
 * @file
 * This file provides basic hooks imlementations.
 */

// Load CRUD functions.
module_load_include('crud.inc', 'address_book');


/**
 * kva
 * Implements hook_menu().
 *
 * @return array
 */
function address_book_menu() {

  $items['address-book'] = array(
    'title' => 'Address book',
    'page callback' => 'drupal_get_form', //drupal_get_form
    'access callback' => 'user_access',
    'access arguments' => array('visit address_book sample page'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/content/address_book/name/%'] = array(
    'description' => t('Contact page'),
    'page callback' => 'address_book_page_view',
    'page arguments' => array(4),
    'access callback' => 'address_book_access',
    'access arguments' => array(4),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['address-book/edit/%'] = array(
    'title' => 'Edit form',
    'page callback' => 'address_book_form_page',
    //'page callback' => 'address_book_edit_form_page',
    'page arguments' => array(2), //
    'access callback' => 'user_access',
    'access arguments' => array('visit address_book sample page'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items ['address-book/delete/%'] = array(
    'title' => 'Delete',
    'page callback' => 'address_book_delete_item',
    'page arguments' =>array(2),
    'access arguments' => array('address_book_access'),
    'access callback' => TRUE,
  );

  $items['address-book/ajax/%'] = array(
    'title' => 'Ajax callback',
    'type' => MENU_CALLBACK,
    'page callback' => 'address_book_ajax_callback',
    'page arguments' => array(2),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    //'delivery callback' => 'ajax_deliver',
  );


  return $items;
}

function address_book_delete_item($cid) {
  address_book_delete($cid);
  drupal_goto('address-book');
}

/**
 * Ajax callback to display the current time.
 */
function address_book_ajax_callback($cid = FALSE) {
  if ($cid) {
    $contact = address_book_load($cid);
    if ($contact && $address_book_wrapped = entity_metadata_wrapper('address_book', $contact)) {
      $notes = $address_book_wrapped->field_notes->value();
      //dsm($notes);
      $commands[] = ajax_command_replace('#address_book_notes', $notes);
      $delivery = array('#type' => 'ajax', '#commands' => $commands);
      ajax_deliver($delivery);
    }
  }
}

/**
 * @return array|mixed
 * appears at address_book_admin.inc
 */
function address_book_form_page() {
  return drupal_get_form('address_book_form');
}

/**
 * page callback for address-book/list
 * @return array|mixed
 */
function address_book_page_address_book() {
  return drupal_get_form('address_book_form_alter');
}


/**
 * Impliments hook_form_alter
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function address_book_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == "views_form_address_book_page") {
    drupal_set_breadcrumb(array(
      l(t('Home'), '<front>'),
      'Addressbook'
    ));
    $form['Create_contact'] = array(
      '#type' => 'link',
      '#title' => t('Create new contact'),
      '#href' => 'addressbook/add', // . $node->nid,
      '#weight' => 0,
    );

    $path = drupal_get_path('module', 'address_book');
    drupal_add_js($path . '/js/address_book_confirm.js');
  }
}

/**
 * Implements hook_access().
 */
function address_book_access($op = NULL, $address_book = NULL, $account = NULL) {
  return user_access('administer site configuration');
}

/**
 * impliments hook_entity_info
 * @return array
 */
function address_book_entity_info() {
  return array(
    'address_book' => array(
      'label' => t('Address book'),
      'base table' => 'address_book',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'cid',
        'label' => 'title'

      ),
      'bundles' => array(
        'address_book' => array(
          'label' => t('Address book'),
          'admin' => array(
            'path' => 'addressbook/structure',
            'access arguments' => array('administer site configuration'),
          ),
        ),
      ),
      // Entity API-related parameters.
      'controller class' => 'EntityAPIController',
      'entity class' => 'Entity',
      'admin ui' => array(
        'path' => 'addressbook',
        'file' => 'address_book.admin.inc',
      ),
      'module' => 'address_book',
      'access callback' => 'address_book_access',
    ),
  );
}

/**
 * page for contact view
 * @param $cid
 * @return array
 */
function address_book_page_view($cid) {
  $variables = address_book_load($cid);

  if ($variables) {
    drupal_add_library('system', 'drupal.ajax');
    drupal_add_library('system', 'jquery.form');
    $address_book_wrapped = entity_metadata_wrapper('address_book', $variables);

       $def = array (
         'first_name' => $address_book_wrapped->field_first_name->value(),
         'last_name' => $address_book_wrapped->field_last_name->value(),
         'image' => $address_book_wrapped->field_photo->value(),//value(),//->uri,//->url->value(),
         'category' => $address_book_wrapped->field_category->getPropertyInfo(),//->value()->tid,
         'email' => $address_book_wrapped->field_email->value(),
         'phone' => $address_book_wrapped->field_phone->value(),
         'birthday' => $address_book_wrapped->field_birthday->value(),
         'notes' => $address_book_wrapped->field_notes->value(),

       );

    $read_more = l( t('[read more]'), 'address-book/ajax/' . $cid, array( 'attributes' => array( 'class' => array('use-ajax') ) ) );

    $output  = '<p>' . $def['first_name'] . ' ' . $def['last_name'] . '</p>';
//    $output .= '<p>' . $def['image'] . '</p>';
//    $output .= '<p>' . $def['category'] . '</p>';
    $output .= '<p>' . $def['email'] . '</p>';
    $output .= '<p>' . $def['birthday'] . '</p>';
    $output .= '<div id="address_book_notes">' . substr($def['notes'], 0, 49) . '... ' . $read_more . '</div>';
  }
  return $output;
}

/**
 * hook_views_bulk_operations_form_alter().
 */
function address_book_views_bulk_operations_form_alter(&$form, &$form_state, $vbo) {

  if ($form_state['step'] == 'views_form_views_form') {
    $form['actions']['action::views_bulk_operations_delete_item'] = $form['select']['action::views_bulk_operations_delete_item'];
    $form['select']['action::views_bulk_operations_delete_item']['#printed'] = TRUE;
    $form['actions']['submit']['#access'] = FALSE;
    $form['actions']['#access'] = TRUE;
  }

}
