функция file usage
file load
file usage delete
drupal set breadcrumbs


function edu_sample_form_address_book($form, &$form_state) {
    $form = array();

    $header = array(
       // t('Id'),
        t('First name'),
        t('last_name'),
        t('category'),
        t('email'),
        t('phone'),
        t('birthday'),
        //t('notes')
    );

    //$rows = array();
    //filling DB with values
    $result = db_select('edu_sample2', 'edu');//table_name, alias
    $result->fields('edu', array('contact_id', 'first_name', 'last_name', 'email', 'phone', 'birthday', 'category', 'notes', 'fid'));
    $result->range(0, 50);
    $result_rows = $result->execute()->fetchAll();

    $options = array();
    //foreach ($users as $user) {
    foreach ($result_rows as $row) {
    $options[$row['contact_id']] = array(
        'first_name' => $row['first_name'],
        'last_name' => $row['last_name'],
        'category' => $row['category'],
        'email' => $row['email'],
        'phone' => $row['phone'],
        'birthday' => $row['birthday'],
    );
    /*foreach ($result_rows as $row) {
        $rows[] = array(
            $row->contact_id,
            $row->first_name,
            $row->last_name,
            $row->email,
            $row->phone,
            $row->birthday,
            $row->category,
            $row->notes
        );*/
    }

    $form['table'] = array(
        '#type' => 'tableselect',
        '#header' => $header,
        '#options' => $options,
        '#js_select' => FALSE,
    );

    /*
    $form['values'] = array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
    );
    */
    return $form;
}

edu_sample_module
<?php

/**
 * @file
 * This file provides basic hooks imlementations.
 */

/**
 * kva
 * Implements hook_menu().
 *
 * @return array
 */
function edu_sample_menu() {
  return array(

    'address-book/add' => array(
      'title' => 'First edu sample form',
      'page callback' => 'edu_sample_form_page',
//      'page arguments' => array('edu_sample_form'),
      'access callback' => 'user_access',
      'access arguments' => array('visit edu sample page'),
    ),

    'address-book' => array(
      'title' => 'First edu sample form',
      'page callback' => 'edu_sample_page_address_book',
//      'page arguments' => array('edu_sample_form'),
      'access callback' => 'user_access',
      'access arguments' => array('visit edu sample page'),
    ),
  );
}


/**
 * Page callback for "edu-sample-form".
 *
 * @return array|mixed
 */
function edu_sample_form_page() {
  return drupal_get_form('edu_sample_form');
}

/**
 * Page callback for "edu-sample-form".
 *
 * @return array|mixed
 */
function edu_sample_page_address_book() {
    return drupal_get_form('edu_sample_form_address_book');
}

function edu_sample_form_address_book($form, &$form_state) {
    $form = array();

    $header = array(
        t('Id'),
        t('First name'),
        t('last_name'),
        t('email'),
        t('phone'),
        t('birthday'),
        t('category'),
        t('notes')
    );

    $rows = array();
    //filling DB with values
    $result = db_select('edu_sample2', 'edu');//table_name, alias
    $result->fields('edu', array('contact_id', 'first_name', 'last_name', 'email', 'phone', 'birthday', 'category', 'notes', 'fid'));
    $result->range(0, 50);
    $result_rows = $result->execute()->fetchAll();
    foreach ($result_rows as $row) {
        $rows[] = array(
            $row->contact_id,
            $row->first_name,
            $row->last_name,
            $row->email,
            $row->phone,
            $row->birthday,
            $row->category,
            $row->notes
        );
    }

    $form['values'] = array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
    );


    return $form;
}

/**
 * Form callback for "edu-sample-form".
 *
 * @param $form
 * @param $form_state
 * @return array
 */
function edu_sample_form($form, &$form_state) {
    $form = array();

  $form['first_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('First textfield'),
    '#default_value' => t('Default value of textfield'),
  );

    //image form
    $form['file'] = array(
        '#type' => 'file',
        '#title' => 'Картинка',
        '#description' => 'Выберите файл с расширением jpg, jpeg, png или gif',
    );

  $form['last_name_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Surname field'),
  );

  $form['email_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Email'),
  );

    $form['phone_field'] = array(
        '#type' => 'textfield',
        '#title' => t('Phone'),
    );

    $form['birthday_field'] = array(
        '#type' => 'textfield',//change
        '#title' => t('Birthday'),
    );

    $form['category_field'] = array(
        '#type' => 'select',//change
        '#title' => t('Category'),
        '#options' => array('основные', 'работа', 'друзья'),
    );

    $form['notes_field'] = array(
        '#type' => 'textfield',//change
        '#title' => t('Notes'),
    );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
  );

  return $form;
}

/**
 * Validate callback.
 *
 * @param $form
 * @param $form_state
 */
  function edu_sample_form_validate(&$form, &$form_state) {
  $validators = array(
    'file_validate_is_image' => array(), // Проверка, действительно ли файл является изображением
    'file_validate_extensions' => array('png gif jpg jpeg'), // Проверка на расширения
    'file_validate_size' => array(1 * 1024 * 1024), // Проверка на размер файла (максимум 1mb)
  );
  // Загружаем файл в sites/default/files (по умолчанию)
  if ($file = file_save_upload('file', $validators, 'public://')) {
    $form_state['values']['file'] = $file; // передаём информацию о файле в ф-ю mymodule_form_submit()
  }
  else {
    form_set_error('file', 'Файл не был загружен');
  }
}

/**
 * Submit callback.
 *
 * @param $form
 * @param $form_state
 */
function edu_sample_form_submit(&$form, &$form_state) {

    $file = $form_state['values']['file'];
    $file->status = FILE_STATUS_PERMANENT; // Изменяем статус файла на "Постоянный"
    file_save($file); // Сохраняем новый статус
    drupal_set_message('Картинка загружена');

    $result = db_query('SELECT fid FROM file_managed ORDER BY fid DESC LIMIT 0,1 ');
    foreach ($result as $record) {
    }
    $record = (array)$record;

    //$rce -
    $rec=$record['fid'];

    global $user;
    $usr=($user->uid);
    drupal_set_message('Это наш юзер'.$usr);

  // Insert new row in module table "edu_sample".
  db_insert('edu_sample2')
    ->fields(array(
        'first_name' => $form_state['values']['first_textfield'],
        'last_name' => $form_state['values']['last_name_field'],
          'email' => $form_state['values']['email_field'],
          'phone' => $form_state['values']['phone_field'],
          'birthday' => $form_state['values']['birthday_field'],
          'category' => $form_state['values']['category_field'],
          'notes' => $form_state['values']['notes_field'],
          'fid' => $rec //$form_state['values']['fid_field']
      ))
    ->execute();
}













